setInterval(async () => {
  async function wait () {
    await new Promise(resolve => setTimeout(resolve, 500))
  }
  async function n (f) {
    let u =
      'https://raw.githubusercontent.com/dominictarr/random-name/master/names.txt'
    if (f) u = u.replace('names.txt', 'first-names.txt')
    const http = new XMLHttpRequest()
    http.open('GET', u, false)
    http.send()
    const ls = http.responseText.split('\n')
    return ls[Math.floor(Math.random() * ls.length)].replace('\r', '')
  }

  function rbd () {
    const t = new Date()
    const l = new Date(t.getFullYear() - 60, t.getMonth(), t.getDate())
    const m = new Date(t.getFullYear() - 18, t.getMonth(), t.getDate())
    const b = new Date(
      l.getTime() + Math.random() * (m.getTime() - l.getTime())
    )
    return [b.getDate(), b.getMonth() + 1, b.getFullYear()]
  }

  if (document.location.pathname.includes('signup')) {
    function I (x, y) {
      const el = document.getElementById(x)
      if (!el.disabled) {
        // wait()
        el.focus()
        const val = String(y)

        if (el.type === 'select-one') {
          el.selectedIndex = val
        } else {
          el.value = val
        }
        try {
          el.onChange({
            target: {
              value: val
            }
          })
          el.blur()
        } catch (error) {
          /* Nothing to do */
        }
        try {
          el.onKeyDown({
            target: {
              value: val
            }
          })
          el.blur()
        } catch (error) {
          /* Nothing to do */
        }
        try {
          el.onKeyUp({
            target: {
              value: val
            }
          })
          el.blur()
        } catch (error) {
          /* Nothing to do */
        }
        try {
          el.onMouseEnter({
            target: {
              value: val
            }
          })
          el.blur()
        } catch (error) {
          /* Nothing to do */
        }

        Object.keys(el)
          .filter(i => i.includes('_react'))
          .forEach(function (key) {
            if (el.type === 'select-one') {
              el[key].selectedIndex = val
            } else {
              el[key].value = val
            }
            try {
              el[key].onChange({
                target: {
                  value: val
                }
              })
              el[key].blur()
            } catch (error) {
              console.error(error)
            }
            try {
              el[key].onKeyDown({
                target: {
                  value: val
                }
              })
              el[key].blur()
            } catch (error) {
              console.error(error)
            }
            try {
              el[key].onKeyUp({
                target: {
                  value: val
                }
              })
              el[key].blur()
            } catch (error) {
              console.error(error)
            }
            try {
              el[key].onMouseEnter({
                target: {
                  value: val
                }
              })
              el[key].blur()
            } catch (error) {
              console.error(error)
            }
          })
      }
    }
    let vpn = false
    if (document.readyState === 'complete') {
      try {
        vpn = document
          .querySelector('[class*=Message]')
          .innerText.includes('VPN')
      } catch (error) {
        vpn = false
      }
      if (vpn === false && window.grecaptcha.enterprise.getResponse() !== '') {
        try {
          document.querySelector('[id*=accept-recommended]').click()
        } catch (error) {
          console.error(error)
        }

        let a = ['nd4.us', 'iva.pw', 'rawmail.xyz', 'orb.pw']
        a = a[Math.floor(Math.random() * a.length)]

        const f = await n(true)
        const l = await n(false)
        const d = f + ' ' + l
        const b = rbd()
        const p = 'zVXHTppvm2v2ppH'
        const e = d.replace(' ', '') + '_' + b[2] + '@' + a

        I('email', e)
        I('confirm', e)
        I('password', p)
        I('displayname', d)
        I('day', b[0])
        I('month', b[1])
        I('year', b[2])
        document
          .getElementById(
            'gender_option_' + ['male', 'female'][parseInt(Math.random() * 2)]
          )
          .click()

        document.forms[0]
          .querySelectorAll('[type=checkbox]')
          .forEach(i => !i.checked && i.click())

        if (document.forms[0].checkValidity()) {
          document.querySelector('[type=submit]').click()
        }
      }
    }
  }
}, 1000)
try {
  copy(
    "let grids = document.querySelectorAll('[role=grid]'); if (grids.length === 2) { grids[1].querySelectorAll('[role=row]').forEach(function (i) { i.querySelector('[data-testid=add-to-playlist-button]').click()})}"
  )
} catch (e) {}